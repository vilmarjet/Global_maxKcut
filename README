Instruction to execute branch and bound for max-k-cut

Application designed for Unix systems, only.

The following are steps to build, personallyze and execute the application.
1) MOSEK: Mosek is the solver chosen for solve SDP and LP formulations.  
    For installation: https://www.mosek.com/

2) Set-up of "Makefile":
    In file phd_maxKcut/Makefile set mosek directories,
    MOSEK_IPATHS and MOSEK_BINPATH set the head and bin folder of mosek, for example:
    
    MOSEK_IPATHS=-I ../../mosek/9.1/tools/platform/linux64x86/h
    MOSEK_BINPATH=../../mosek/9.1/tools/platform/linux64x86/bin

3) Set-up parameters files:
    Go to resource/parameters, set the following files with your peferences:
     * BranchAndBoundParameters.txt: parameters for branch and bound method,
     * CuttingPlaneParameters.txt: parameters for cutting plane method used to find upper bound,
     * HeuristicParameters.txt: set heuristic and other parameters to be used in branch and bound,
     * ProblemParameters.txt: parameters of problem, for example: input_instance, partition_number, solver_type 

3)Build application (bb_mkc_run)
    In terminal, go to directory of phd_maxKcut, then execute the following command:
    
    $ make build 

4) Execute example and parameter
    The application can be runned with 0, 1 or 2 arguments:
    a) run without arguments, this way, all the parameters in ProblemParameters.txt will be considered:

        $ make run
            or 
        $./bb_mkc_run

    b) The bb_mkc_run can receive in the first argument the path for instance test. Thus, the file_name set in ProblemParameters.txt will be disconsidered.

        $ ./bb_mkc_run ./resource/instance4.txt 
    
    c) The application can also receive as arguments the number of partions. Thus, partition_number will be disconsidered.

        $ ./bb_mkc_run ./resource/instance4.txt 3

        Then test in instance4.txt will be executed for 3 partitions. 

5) results:
    In BranchAndBoundParameters.txt it is possible to set the name of file where result of branch-and-bound is output. 
    The results will be created at the end of first execution in 
        ./target/results
